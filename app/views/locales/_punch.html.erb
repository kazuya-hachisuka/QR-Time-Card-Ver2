<div class="container">
  <div class="row justify-content-center">
    <h1><%= locale.locale_name %></h1>
  </div>
</div>
<div class="container">
  <div class="row justify-content-center">
    <div id="today"></div>
  </div>
</div>
<div class="container">
  <div class="row justify-content-center">
    <div id="clock"</div>
  </div>
</div>
<div class="container">
  <div class="row justify-content-center">
    <div id="loadingMessage" hidden=""> Loading video...</div>
    <canvas id="canvas" height="480" width="640"></canvas>
    <div id="output">
      <div hidden="">
        <span id="outputData"></span>
      </div>
    </div>
    <div class="row justify-content-center">
      <div id="outputMessage">タイムカードをかざしてください</div>
    </div>
  </div>
</div>

<script>
  //QRコードのスキャン
  var video = document.createElement("video");
  var canvasElement = document.getElementById("canvas");
  var canvas = canvasElement.getContext("2d");
  var loadingMessage = document.getElementById("loadingMessage");
  var outputContainer = document.getElementById("output");
  var outputMessage = document.getElementById("outputMessage");
  var outputData = document.getElementById("outputData");

  function drawLine(begin, end, color) {
    canvas.beginPath();
    canvas.moveTo(begin.x, begin.y);
    canvas.lineTo(end.x, end.y);
    canvas.lineWidth = 4;
    canvas.strokeStyle = color;
    canvas.stroke();
  }

  // Use facingMode: environment to attemt to get the front camera on phones
  navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } }).then(function(stream) {
    video.srcObject = stream;
    video.setAttribute("playsinline", true); // required to tell iOS safari we don't want fullscreen
    video.play();
    requestAnimationFrame(tick);
  });

  function tick() {
    loadingMessage.innerText = " Loading video..."
    if (video.readyState === video.HAVE_ENOUGH_DATA) {
      loadingMessage.hidden = true;
      canvasElement.hidden = false;
      outputContainer.hidden = false;

      canvasElement.height = video.videoHeight;
      canvasElement.width = video.videoWidth;
      canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);
      var imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);
      var code = jsQR(imageData.data, imageData.width, imageData.height);
      if (code) {
        drawLine(code.location.topLeftCorner, code.location.topRightCorner, "#FF3B58");
        drawLine(code.location.topRightCorner, code.location.bottomRightCorner, "#FF3B58");
        drawLine(code.location.bottomRightCorner, code.location.bottomLeftCorner, "#FF3B58");
        drawLine(code.location.bottomLeftCorner, code.location.topLeftCorner, "#FF3B58");
        outputMessage.hidden = true;
        outputData.parentElement.hidden = false;
        outputData.innerText = code.data;
        location.href = output.innerText;
      } else {
        outputMessage.hidden = false;
        outputData.parentElement.hidden = true;
      }
    }
    // requestAnimationFrame(tick);
  }
　//時間の表示
  setInterval(() => {
    const date = new Date();
    const h = String("0" + date.getHours()).slice(-2);
    const m = String("0" + date.getMinutes()).slice(-2);
    const s = String("0" + date.getSeconds()).slice(-2);
    const time = `${h}:${m}:${s}`
    document.querySelector('#clock').innerHTML = time;
  });
  //年月日の表示
  const date = new Date();
  const year = date.getFullYear();
  const month = date.getMonth() + 1;
  const day = date.getDate();
  const week = date.getDay();
  const dayList = ['日', '月', '火', '水', '木', '金', '土'];
  const weekLabel = dayList[week];
  document.querySelector('#today').innerHTML = `${year}年 ${month}月 ${day}日 ${weekLabel}`;
</script>